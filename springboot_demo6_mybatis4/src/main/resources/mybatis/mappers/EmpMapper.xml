<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jt.mapper.EmpMapper">

    <select id="findAll" resultMap="empRM">
        select e.id,e.name,e.age,d.dept_id,d.dept_name
        from emp e,dept d
        where e.dept_id = d.dept_id
    </select>

    <!--
        规则:
            1.如果映射的字段与对象的属性一致,则可以省略不写.
            2.最好保留主键的字段信息.
            3.如果需要封装单个对象则使用association标签
                3.1 property 代表封装对象的属性
                3.2 javaType 指定属性的类型 注意路径
            4.如果遇到关联封装,必须全部配置映射关系. 如果属性与字段名称一致
              则可以使用autoMapping="true"实现自动映射
    -->
    <resultMap id="empRM" type="Emp" autoMapping="true">
        <id column="id" property="id"/>
        <!--完成Dept对象的封装-->
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"/>
            <result column="dept_name" property="deptName"/>
        </association>
    </resultMap>

    <!--where条件的子查询-->
    <select id="findAllWhere" resultMap="empRM2">
        select * from emp
    </select>
    <!--
        子查询的说明:
            1.column="子查询的字段信息"
            2.select= "sql的ID" 作用:根据column中的数据 实现子查询!!!
    -->
    <resultMap id="empRM2" type="Emp" autoMapping="true">
        <id column="id" property="id"></id>
        <association property="dept" javaType="Dept"
                     column="dept_id" select="findDept"/>
    </resultMap>
    <select id="findDept" resultMap="deptRM">
        select * from dept where dept_id = #{dept_id}
    </select>
    <resultMap id="deptRM" type="Dept">
        <id column="dept_id" property="deptId"/>
        <result column="dept_name" property="deptName"/>
    </resultMap>
    
</mapper>