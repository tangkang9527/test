<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jt.mapper.DeptMapper">

    <!--
        ORM思想: 对象关系映射.
        属性: deptId,deptName
        字段: dept_id,dept_name
        resultType说明:
             当结果集中的字段名称,如果与属性的名称一致时,
             才会实现自动的数据封装.
        resultMap="" 自定义的封装数据的结构
    -->
    <select id="findAll" resultMap="deptRM">
        select * from dept
    </select>

    <!--自定义映射关系的
        语法:
            1.id标签代表主键 (每张表中都会有一个主键)
                1.1.column: 代表结果集中的字段.
                1.2.property: 对象中的属性
            2.result 除了主键之外的配置信息
    -->
    <resultMap id="deptRM" type="Dept">
        <id column="dept_id" property="deptId"/>
        <result column="dept_name" property="deptName"/>
    </resultMap>

    <select id="findDept" resultMap="listRM">
        SELECT d.dept_id,d.dept_name,e.id,e.name,e.age FROM
            dept d
                LEFT JOIN
            emp e
            ON
                d.dept_id = e.dept_id
    </select>

    <!--
        关于一对多 数据封装说明:
            1.collection: 封装集合的固定写法.
                property:   指定属性
                ofType:     封装List集合的泛型对象
            2.如果开启驼峰映射规则,可以简化赋值过程
            3.autoMapping="true" 自动实现映射
            4.一般最好保留主键,为后续扩展提供方便.
    -->
    <resultMap id="listRM" type="Dept" autoMapping="true">
        <id column="dept_id" property="deptId"/>
        <!--<result column="dept_name" property="deptName"/>-->
        <collection property="emps" ofType="Emp" autoMapping="true">
            <id column="id" property="id"/>
        </collection>
    </resultMap>

</mapper>