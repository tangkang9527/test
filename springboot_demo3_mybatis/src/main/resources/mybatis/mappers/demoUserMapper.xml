<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--xml映射文件 必须与接口一对一绑定
    namespace: 指定需要绑定的接口名称. 不能重复.
 -->
<mapper namespace="com.jt.mapper.DemoUserMapper">

    <!--实现接口中的方法
        id: 需要与接口中的方法绑定. 一般复制粘贴
        resultType: 对象的包路径.
        规则: sql语句不要添加多余的;号  Oracle数据库不能添加;号
    -->
    <select id="findAll" resultType="com.jt.pojo.DemoUser">
        select id,name,age,sex from demo_user
    </select>

    <!--
         parameterType: 参数类型
         mybatis中通过 #{} 获取参数
         resultType: 返回值结果对象
    -->
    <select id="findOne" parameterType="int" resultType="com.jt.pojo.DemoUser">
        select * from demo_user where id = #{id}
    </select>

    <!--说明: parameterType其中的类型程序可以根据参数自动判断,所以可以省略不写
             根据名称,动态取值 使用#{}关键字
      -->
    <select id="findByName" resultType="com.jt.pojo.DemoUser">
        select * from demo_user where name = #{name}
    </select>

    <!--
        查询sex=女 and age > 18岁
        参数: DemoUser user 意图:传递属性的
        规则: 如果传递的参数是对象,则通过#{属性} 可以直接获取数据.
    -->
    <select id="findBySA" resultType="com.jt.pojo.DemoUser">
        select * from demo_user where sex= #{sex} and age > #{age}
    </select>

    <!--
        如果参数被@Param("sex") String sex修饰
        则#{参数key}即可获取数据
    -->
    <select id="findBySA2" resultType="com.jt.pojo.DemoUser">
        select * from demo_user where sex= #{sex} and age > #{age}
    </select>

    <!--
        Map<String, Object> map
            sex=女  age=18
        规则: 如果参数是一个map集合,则通过#{key}获取数据.
    -->
    <select id="findBySA3" resultType="com.jt.pojo.DemoUser">
        select * from demo_user where sex= #{sex} and age > #{age}
    </select>

    <!--
        根据指定的字段排序
    -->
    <select id="findOrder" resultType="com.jt.pojo.DemoUser">
        select * from demo_user order by ${column}
    </select>



</mapper>